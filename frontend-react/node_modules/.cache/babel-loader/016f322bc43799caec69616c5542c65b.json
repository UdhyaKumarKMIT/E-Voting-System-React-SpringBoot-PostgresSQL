{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal files\\\\RUSA\\\\Semester V\\\\Java Programming\\\\JAVA PROJECT\\\\E-Voting-System-React-SpringBoot-PostgresSQL\\\\frontend-react\\\\src\\\\layout\\\\ConfirmationModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useParams } from 'react';\nimport axios from \"axios\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ConfirmationModal = _ref => {\n  _s();\n  let {\n    message,\n    id\n  } = _ref;\n  let navigate = useNavigate();\n  const [isOpen, setIsOpen] = useState(false);\n  const [attributeValue, setAttributeValue] = useState(\"none\");\n  // const { id } = useParams();\n\n  // const [vote, setVote] = useState(0);\n\n  // const loadUser = async () => {\n\n  // };\n\n  // useEffect(() => {\n  //     loadUser();\n  //   }, []);\n\n  const handleConfirm = async () => {\n    const result = await axios.get(`http://localhost:8080/candidate/${id}`);\n    let vote = result.data.votes_count;\n    await axios.put(`http://localhost:8080/candidate/${id}`, {\n      votes_count: vote + 1\n    });\n    console.log(vote);\n    setIsOpen(false);\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"vote-option\",\n      onClick: () => {\n        setIsOpen(true);\n        setAttributeValue(\"block\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal \",\n      style: {\n        display: attributeValue,\n        top: \"30px\",\n        width: \"500px\",\n        left: \"30%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content confirm-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary-btn\",\n            onClick: handleConfirm,\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-danger\",\n            onClick: () => setIsOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ConfirmationModal, \"TONurmOdkjs3ty2Gz7GCaN9chFM=\", false, function () {\n  return [useNavigate];\n});\n_c = ConfirmationModal;\nexport default ConfirmationModal;\nvar _c;\n$RefreshReg$(_c, \"ConfirmationModal\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ConfirmationModal","_ref","_s","message","id","navigate","isOpen","setIsOpen","attributeValue","setAttributeValue","handleConfirm","result","get","vote","data","votes_count","put","console","log","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","display","top","width","left","justifyContent","_c","$RefreshReg$"],"sources":["D:/Personal files/RUSA/Semester V/Java Programming/JAVA PROJECT/E-Voting-System-React-SpringBoot-PostgresSQL/frontend-react/src/layout/ConfirmationModal.js"],"sourcesContent":["import React, { useState, useEffect, useParams } from 'react';\r\nimport axios from \"axios\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nimport '../App.css'\r\nconst ConfirmationModal = ({ message, id }) => {\r\n\r\n    let navigate = useNavigate();\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [attributeValue, setAttributeValue] = useState(\"none\");\r\n    // const { id } = useParams();\r\n\r\n    // const [vote, setVote] = useState(0);\r\n\r\n    // const loadUser = async () => {\r\n      \r\n    // };\r\n\r\n\r\n    // useEffect(() => {\r\n    //     loadUser();\r\n    //   }, []);\r\n\r\n    const handleConfirm = async () => {\r\n    const result = await axios.get(`http://localhost:8080/candidate/${id}`);\r\n    let vote = result.data.votes_count\r\n    await axios.put(`http://localhost:8080/candidate/${id}`, {votes_count:vote+1})\r\n    console.log(vote)\r\n    setIsOpen(false);\r\n    navigate('/login')\r\n    };\r\n\r\n    return (\r\n    <>\r\n      <button className='vote-option' onClick={() => {setIsOpen(true); setAttributeValue(\"block\");}}></button>\r\n      {isOpen && (\r\n        <div className=\"modal \" style={{display:attributeValue, top:\"30px\", width:\"500px\", left:\"30%\"}}>\r\n          <div className=\"modal-content confirm-modal\">\r\n            <p>{message}</p>\r\n            <div style={{display:\"flex\", justifyContent:\"center\"}} >\r\n            <button className='primary-btn' onClick={handleConfirm}>Confirm</button>\r\n            <button className='btn btn-outline-danger' onClick={() => setIsOpen(false)}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}